openapi: 3.0.3
info:
  title: User Profile API
  version: 1.0.0
  description: API pour gérer les profils d'utilisateurs avec décomposition en sous-ressources.
paths:
  /users:
    post:
      summary: Créer une liste d'utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            example:
              - first_name: "Jean"
                last_name: "Dupont"
                birthdate: "1990-01-01"
                email: "jean.dupont@example.com"
                address_street: "123 Rue Exemple"
                address_city: "Paris"
                address_country: "France"
                address_postal_code: 75001
                needs_newsletter: true
                language: "fr"
      responses:
        '201':
          description: Utilisateurs créés avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
              example:
                - identifier: "uuid-1234"
                  first_name: "Jean"
                  last_name: "Dupont"
                  birthdate: "1990-01-01"
                  email: "jean.dupont@example.com"
                  address_street: "123 Rue Exemple"
                  address_city: "Paris"
                  address_country: "France"
                  address_postal_code: 75001
                  needs_newsletter: true
                  language: "fr"
  /users/{id}:
    get:
      summary: Récupérer un utilisateur par son identifiant
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Profil utilisateur récupéré
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              example:
                identifier: "uuid-1234"
                first_name: "Jean"
                last_name: "Dupont"
                birthdate: "1990-01-01"
                email: "jean.dupont@example.com"
                address_street: "123 Rue Exemple"
                address_city: "Paris"
                address_country: "France"
                address_postal_code: 75001
                needs_newsletter: true
                language: "fr"
        '404':
          description: Utilisateur non trouvé
  /users/{id}/personalInfo:
    put:
      summary: Mettre à jour les informations personnelles
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
            example:
              first_name: "Jean"
              last_name: "Dupont"
              birthdate: "1990-01-01"
              email: "jean.dupont@example.com"
      responses:
        '200':
          description: Informations personnelles mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInfo'
        '404':
          description: Utilisateur non trouvé
  /users/{id}/address:
    put:
      summary: Mettre à jour l'adresse
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
            example:
              address_street: "123 Rue Exemple"
              address_city: "Paris"
              address_country: "France"
              address_postal_code: 75001
      responses:
        '200':
          description: Adresse mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '404':
          description: Utilisateur non trouvé
  /users/{id}/preferences:
    put:
      summary: Mettre à jour les préférences
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
            example:
              needs_newsletter: true
              language: "fr"
      responses:
        '200':
          description: Préférences mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
        '404':
          description: Utilisateur non trouvé
components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Identifiant unique de l'utilisateur
  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          description: Prénom de l'utilisateur
        last_name:
          type: string
          description: Nom de famille de l'utilisateur
        birthdate:
          type: string
          format: date
          description: Date de naissance de l'utilisateur
        email:
          type: string
          format: email
          description: Adresse e-mail de l'utilisateur
      required:
        - first_name
        - last_name
        - birthdate
        - email
    Address:
      type: object
      properties:
        address_street:
          type: string
          description: Rue de l'adresse
        address_city:
          type: string
          description: Ville de l'adresse
        address_country:
          type: string
          description: Pays de l'adresse
        address_postal_code:
          type: integer
          description: Code postal de l'adresse
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          description: Indique si l'utilisateur souhaite recevoir la newsletter
        language:
          type: string
          enum: [mg, fr, eng]
          description: Langue préférée de l'utilisateur
      required:
        - needs_newsletter
        - language
    CreateUserProfile:
      type: object
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
    UserProfile:
      type: object
      allOf:
        - type: object
          properties:
            identifier:
              type: string
              description: Identifiant unique généré par le serveur
          required:
            - identifier
        - $ref: '#/components/schemas/CreateUserProfile'